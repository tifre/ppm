<customScript languageCode="gel">
	<scriptText>
		<gel:script xmlns:core="jelly:core"
				xmlns:file="jelly:com.niku.union.gel.FileTagLibrary"
				xmlns:gel="jelly:com.niku.union.gel.GELTagLibrary"
				xmlns:obj="http://www.niku.com/xog/Object"
				xmlns:soap="jelly:com.niku.union.gel.SOAPTagLibrary"
				xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
				xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
				xmlns:sql="jelly:sql"
				xmlns:util="jelly:util"
				xmlns:x="jelly:xml"
				xmlns:xog="http://www.niku.com/xog"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

			<!-- DB access -->
			<gel:setDataSource dbId="Niku"/>

			<gel:parameter var="debug"/>
			<gel:parameter var="reloginAfter" default="100" />


			<core:set value="${gel_objectInstanceId}" var="myObjectId"/>
			<core:set value="${gel_processInstanceId}" var="myProcessId"/>

			<gel:log level="INFO">myProcessId ${myProcessId}</gel:log>
			<gel:log level="INFO">myObjectId ${myObjectId}</gel:log>


			<!--######################################################################-->
			<!-- GET SESSION FOR XOG -->
			<!--######################################################################-->

			<core:new className="com.niku.union.security.DefaultSecurityIdentifier" var="secId"/>
			<core:invokeStatic className="com.niku.union.security.UserSessionControllerFactory" method="getInstance" var="userSessionCtrl"/>

			<core:set value="${userSessionCtrl.init('admin', secId)}" var="secId"/>
			<core:set value="${secId.getSessionId()}" var="thisSessionId"/>

			<core:set value="XOG Session ID: ${thisSessionId}" var="logMessage"/>
			<gel:formatDate format="yyMMdd HHmmss" stringVar="logDate"/>
			<core:set value="${logDate} - ${logMessage}" var="logMessage"/>
			<gel:log level="INFO">${logMessage}</gel:log>

			<core:invokeStatic className="com.niku.union.config.ConfigurationManager" method="getInstance" var="config"/>
			<core:set value="${config.getProperties()}" var="config"/>
			<core:set value="${config.getWebServer().getSchedulerUrl()}" var="clarity_url"/>

			<core:set value="Clarity URL from Scheduler URL: ${clarity_url}" var="logMessage"/>

			<core:if test="${clarity_url != ''}">
				<util:tokenize delim=":" var="urlComponents">${clarity_url}</util:tokenize>
				<core:set value="${urlComponents.get(0)}://" var="httpMethod"/>
				<core:set value="${urlComponents.get(1)}" var="servername"/>
				<util:tokenize delim="/" var="servername">${servername}</util:tokenize>
				<core:set value="${servername.get(0)}" var="servername"/>
				<core:set value="${urlComponents.get(2)}" var="portnumber"/>
				<core:choose>
					<core:when test="${portnumber eq null}">
						<core:switch on="${httpMethod}">
							<core:case value="https://">
								<core:set var="portnumber">443</core:set>
							</core:case>
							<core:default>
								<core:set var="portnumber">80</core:set>
							</core:default>
						</core:switch>
					</core:when>
					<core:otherwise>
						<util:tokenize delim="/" var="portnumber">${portnumber}</util:tokenize>
						<core:set value="${portnumber.get(0)}" var="portnumber"/>
					</core:otherwise>
				</core:choose>
				<core:set value="${httpMethod}${servername}:${portnumber}/niku/xog" var="clarity_url"/>
			</core:if>
			<core:set value="XOG URL: ${clarity_url}" var="logMessage"/>
			<core:choose>
				<core:when test="${runningOutsideProcess}">${logMessage}
					<core:if test="${timestamp_log eq 'YES'}">
						<gel:formatDate format="dd MMM yy HH:mm:ss.SSS" stringVar="logDate"/>
						<core:set value="${logDate} - ${logMessage}" var="logMessage"/>
					</core:if>
					<gel:log var="logMessageList">${logMessage}</gel:log>
				</core:when>
				<core:otherwise>
					<gel:log>${logMessage}</gel:log>
				</core:otherwise>
			</core:choose>

			<!--######################################################################-->
			<!-- GET SESSION FOR XOG -->
			<!-- END -->
			<!--######################################################################-->

				<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<core:set value="http://localhost/niku/xog" var="clarity_url"/>
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->
			<!--- ****************************************************** -->


			<gel:parse var="create_master_record_snap">
				<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_customObjectInstance.xsd">
					<Header action="write" externalSource="NIKU" objectType="customObjectInstance" version="13.3.0.286">
						<args name="overrideAutoNumbering" value="false"/>
					</Header>
					<customObjectInstances objectCode="z_kmd_rep_snap">
						<instance instanceCode="xxxxxxxxx" objectCode="z_kmd_rep_snap">
							<CustomInformation>
								<ColumnValue name="code">xxxxxxxxx</ColumnValue>
								<ColumnValue name="page_layout">odf.z_kmd_rep_snapFrame</ColumnValue>
								<ColumnValue name="odf_period_start"/>
								<ColumnValue name="odf_period_end"/>
								<ColumnValue name="partition_code">NIKU.ROOT</ColumnValue>
								<ColumnValue name="name">xxxxxxxxx</ColumnValue>
							</CustomInformation>
						</instance>
					</customObjectInstances>
				</NikuDataBus>
			</gel:parse>

			<core:catch var="v_xog_exception">
				<soap:invoke endpoint="${clarity_url}" var="xogresponse">
					<soap:message>
						<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
							<soapenv:Header>
								<xog:Auth>
									<xog:SessionID>${thisSessionId}</xog:SessionID>
								</xog:Auth>
							</soapenv:Header>
							<soapenv:Body>
								<gel:include select="$create_master_record_snap"/>
							</soapenv:Body>
						</soapenv:Envelope>
					</soap:message>
				</soap:invoke>


				<gel:set asString="true" select="$xogresponse" var="gel_parse_variable_str"/>
				<core:if test="${debug eq 1}">
					<gel:log>XOG responce: ${gel_parse_variable_str} </gel:log>
				</core:if>

			</core:catch>
			<core:choose>
				<core:when test="${v_xog_exception != null}">
					<gel:log category="XOG Failed" level="ERROR">XOG failed: ${v_xog_exception}</gel:log>
				</core:when>
				<core:otherwise>

					<gel:set select="$xogresponse/soapenv:Envelope/soapenv:Body/XOGOutput" var="writeOutputRoot"/>
					<gel:set asString="true" select="$writeOutputRoot/Status/@state" var="XOGoutcome"/>
					<gel:set asString="true" select="$writeOutputRoot/Records/Record" var="XOGoutputrecords"/>
					<gel:set asString="true" select="$writeOutputRoot/Statistics/@totalNumberOfRecords" var="XOGtotalrecords"/>
					<gel:set asString="true" select="$writeOutputRoot/Statistics/@insertedRecords" var="XOGinsertedrecords"/>
					<gel:set asString="true" select="$writeOutputRoot/Severity" var="XOGERROR"/>
					<gel:set asString="true" select="$writeOutputRoot/Description" var="XOGERRORDESC"/>
					<gel:set asString="true" select="$writeOutputRoot/Statistics/@updatedRecords" var="XOGupdatedrecords"/>
					<gel:set asString="true" select="$writeOutputRoot/Statistics/@failureRecords" var="XOGfailurerecords"/>
					<gel:set asString="true" select="$writeOutputRoot/Records/Record/ErrorInformation/Description" var="XOGErrorDescRec"/>
					<gel:set asString="true" select="$writeOutputRoot/Records/Record/ErrorInformation/Exception" var="XOGExceptionRec"/>
					<gel:set asString="true" select="$writeOutputRoot/ErrorInformation/Description" var="XOGErrorDesc"/>
					<gel:set asString="true" select="$writeOutputRoot/ErrorInformation/Exception" var="XOGException"/>
					<gel:log level="INFO">Log record inserted (XOG completed  [Total ${XOGtotalrecords}, Inserted ${XOGinsertedrecords}, Updated ${XOGupdatedrecords}, Failed ${XOGfailurerecords}])</gel:log>
					<core:if test="${XOGErrorDesc != null}">
						<gel:log category="XOG" level="INFO">Error Information:${XOGErrorDesc}</gel:log>
					</core:if>
					<core:if test="${XOGException != null}">
						<gel:log category="XOG" level="INFO">Error Information:${XOGException}</gel:log>
					</core:if>
					<core:if test="${XOGErrorDescRec != null}">
						<gel:log category="XOG" level="INFO">Error Information:${XOGErrorDescRec}</gel:log>
					</core:if>
					<core:if test="${XOGExceptionRec != null}">
						<gel:log category="XOG" level="INFO">Error Information:${XOGExceptionRec}</gel:log>
					</core:if>
					<core:if test="${XOGERRORDESC != null}">
						<gel:log category="XOG" level="INFO">Error Information:${XOGERRORDESC} State: ${XOGERROR}</gel:log>
						<gel:log category="XOG" level="INFO">XOG write: ${gel_parse_variable_str}</gel:log>
					</core:if>

				</core:otherwise>
			</core:choose>

			<!-- Get the new snapshot master object -->
			<sql:query escapeText="false" var="get_snapshot_master_record">
				<![CDATA[
							select code from Odf_Ca_Z_Kmd_Rep_Snap where id = (select max(id) from Odf_Ca_Z_Kmd_Rep_Snap)
					]]>
			</sql:query>
			<!-- Get the new snapshot master object -->

			<core:forEach trim="true" items="${get_snapshot_master_record.rowsByIndex}" var="row">

				<core:set value="${row[0]}" var="z_master_record_id"/>
			</core:forEach>

			<!--######################################################################-->

			<!-- Get tables based on snapshot type -->

			<sql:query escapeText="false" var="get_snapshot_tables">
				<![CDATA[
							select z_table, z_short_name
								from Odf_Ca_Z_Snapshot_Tables
							 where Odf_Parent_Id = ${myObjectId} 
					]]>
			</sql:query>


			<!-- Create snapshot table if not exist -->

			<gel:log level="INFO">---------------------------------------------------------------</gel:log>
			<gel:log level="INFO">In step - Create Snapshot data</gel:log>

			<core:choose>
				<core:when test="${get_snapshot_tables.rowCount gt 1}">
					<core:forEach trim="true" items="${get_snapshot_tables.rowsByIndex}" var="row">

						<core:set value="${row[0]}" var="z_table_name"/>
						<core:set value="${row[1]}" var="z_table_name_code"/>

						<sql:query escapeText="false" var="get_col_names_in_table">
							select  
							 Column_Name
							from all_tab_Columns 
							where table_Name = '${z_table_name}' 
							  and lower(Column_Name) Not In ( 'code' , 'name', 'page_layout', 'partition_code' , 'odf_parent_id' , 'odf_cncrt_parent_id', 'odf_object_code' ) 
							  and data_type not in ( 'BLOB' )							
						</sql:query>

						<!-- Local vars for data load -->
						<core:set value="0" var="count"/>
						<core:new className="java.util.Hashtable" var="column_name_snap_tab"/>
						<!-- Local vars for data load -->

						<core:forEach trim="true" items="${get_col_names_in_table.rowsByIndex}" var="row">

							<core:set value="${row[0]}" var="z_col_name"/>

							<core:if test="${count ne 0}">
								<core:set value="${sql} , ${z_col_name}" var="sql"/>
							</core:if>
							<core:if test="${count eq 0}">
								<core:set value="${z_col_name}" var="sql"/>
							</core:if>
							<expr value="${column_name_snap_tab.put(count,z_col_name)}"/>

							<core:set value="${count+1}" var="count"/>

						</core:forEach>	

						<sql:query escapeText="false" var="get_table_key_name">
								Select  
								Column_Name
							From All_Tab_Columns 
							Where Upper(Table_Name) = Upper('${z_table_name}') 
							and ( Lower(Column_Name) Like ( 'prid' ) or Lower(Column_Name) = ('id'))
              				and data_type not in ( 'BLOB' )	order by column_id
						</sql:query>

						<core:forEach trim="true" items="${get_table_key_name.rowsByIndex}" var="keyrow">

							<core:set value="${keyrow[0]}" var="z_keyrow_name"/>


						</core:forEach>

						<!--<gel:log level="INFO">	select ${sql} from ${z_table_name} </gel:log>-->

						<core:set value="0" var="count_data"/>
						<!-- QUERY for data to add to final data xml XOG -->
						<sql:query escapeText="false" var="get_col_data_in_orgi_table">
								select  ${z_keyrow_name},
	  							${sql}
								from ${z_table_name} 
						</sql:query>

						<!--For each data row in original table that's being snapshotted, we need to create a xml 
						    snip to add to the xml that's to be XOG for the record 
							
							We will use the hash-map created and filled earlier to get data to the correct row
							-->
						<core:forEach trim="true" items="${get_col_data_in_orgi_table.rowsByIndex}" var="row">

							<!-- Xml for data row (XOG) -->
							<gel:parse var="data_insert_xml">
								<NikuDataBus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../xsd/nikuxog_customObjectInstance.xsd">
									<Header action="write" externalSource="NIKU" objectType="customObjectInstance" version="13.3.0.286"/>									
									<customObjectInstances objectCode="z_${z_table_name_code}">
										<instance instanceCode="${row[0]}" objectCode="z_${z_table_name_code}" parentInstanceCode="${z_master_record_id}" parentObjectCode="z_kmd_rep_snap">
											<CustomInformation>
											  <ColumnValue name="code">${row[0]}</ColumnValue>
											  <ColumnValue name="name">${row[0]}</ColumnValue>
											</CustomInformation>
										</instance>
									</customObjectInstances>  
								</NikuDataBus>
							</gel:parse>

							<core:set value="0" var="num"/>
							<core:set value="${row.size()-1}" var="stop"/>

							<core:while test="${num!=stop}">
								<!-- <gel:log>${column_name_snap_tab.get(num)} : ${row[num]}</gel:log> -->

								<!-- The two selects do not return the same number of coulmn, so the array of the sql needs to start +1, due to z_keyrow_name added to the query-->
								<core:set value="${num+1}" var="local_sql_num"/>
								<!-- The two selects do not return the same number of coulmn, so the array of the sql needs to start +1 , due to z_keyrow_name added to the query-->
								
								<gel:parse var="data_insert_xml_row">
									<ColumnValue name="z_${column_name_snap_tab.get(num)}">${row[local_sql_num]}</ColumnValue>
								</gel:parse>

								<gel:set insert="true" select="$data_insert_xml//CustomInformation" value="${data_insert_xml_row}"/>

								<core:set value="${num+1}" var="num"/>
							</core:while>

							<gel:set asString="true" select="$data_insert_xml" var="gel_parse_variable_str"/>

							<core:if test="${debug eq 1}">
								<gel:log>XOG statement: ${gel_parse_variable_str} </gel:log>
							</core:if>


							<!-- XOG in record -->
							<!-- Test session -->
							<core:if test="${count_data % reloginAfter == 0 }">

								<core:new className="com.niku.union.security.DefaultSecurityIdentifier" var="secId"/>
								<core:invokeStatic className="com.niku.union.security.UserSessionControllerFactory" method="getInstance" var="userSessionCtrl"/>
								<core:set value="${userSessionCtrl.init('admin', secId)}" var="secId"/>
								<core:set value="${secId.getSessionId()}" var="thisSessionId"/>
								<core:set value="XOG Session ID: ${thisSessionId}" var="logMessage"/>
								<core:set value="${logDate} - ${logMessage}" var="logMessage"/>
								<gel:log level="INFO">Relogin done</gel:log>

							</core:if>            
							<!-- Test session - END -->

							<core:catch var="v_xog_exception">
								<soap:invoke endpoint="${clarity_url}" var="xogresponse">
									<soap:message>
										<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xog="http://www.niku.com/xog">
											<soapenv:Header>
												<xog:Auth>
													<xog:SessionID>${thisSessionId}</xog:SessionID>
												</xog:Auth>
											</soapenv:Header>
											<soapenv:Body>
												<gel:include select="$data_insert_xml"/>
											</soapenv:Body>
										</soapenv:Envelope>
									</soap:message>
								</soap:invoke>


								<gel:set asString="true" select="$xogresponse" var="gel_parse_variable_str"/>
								<core:if test="${debug eq 1}">
									<gel:log>XOG responce: ${gel_parse_variable_str} </gel:log>
								</core:if>

							</core:catch>
							<core:choose>
								<core:when test="${v_xog_exception != null}">
									<gel:log category="XOG Failed" level="ERROR">(Snapshot record - ${z_table_name}) XOG failed: ${v_xog_exception} ------------  XOG statement: ${gel_parse_variable_str}</gel:log>
								</core:when>
								<core:otherwise>

									<gel:set select="$xogresponse/soapenv:Envelope/soapenv:Body/XOGOutput" var="writeOutputRoot"/>
									<gel:set asString="true" select="$writeOutputRoot/Status/@state" var="XOGoutcome"/>
									<gel:set asString="true" select="$writeOutputRoot/Records/Record" var="XOGoutputrecords"/>
									<gel:set asString="true" select="$writeOutputRoot/Statistics/@totalNumberOfRecords" var="XOGtotalrecords"/>
									<gel:set asString="true" select="$writeOutputRoot/Statistics/@insertedRecords" var="XOGinsertedrecords"/>
									<gel:set asString="true" select="$writeOutputRoot/Severity" var="XOGERROR"/>
									<gel:set asString="true" select="$writeOutputRoot/Description" var="XOGERRORDESC"/>
									<gel:set asString="true" select="$writeOutputRoot/Statistics/@updatedRecords" var="XOGupdatedrecords"/>
									<gel:set asString="true" select="$writeOutputRoot/Statistics/@failureRecords" var="XOGfailurerecords"/>
									<gel:set asString="true" select="$writeOutputRoot/Records/Record/ErrorInformation/Description" var="XOGErrorDescRec"/>
									<gel:set asString="true" select="$writeOutputRoot/Records/Record/ErrorInformation/Exception" var="XOGExceptionRec"/>
									<gel:set asString="true" select="$writeOutputRoot/ErrorInformation/Description" var="XOGErrorDesc"/>
									<gel:set asString="true" select="$writeOutputRoot/ErrorInformation/Exception" var="XOGException"/>
									<gel:log level="INFO">Snapshot record inserted (XOG completed  [Total ${XOGtotalrecords}, Inserted ${XOGinsertedrecords}, Updated ${XOGupdatedrecords}, Failed ${XOGfailurerecords}])</gel:log>
									<core:if test="${XOGErrorDesc != null}">
										<gel:log category="XOG" level="INFO">(Snapshot record - ${z_table_name}) Error Information:${XOGErrorDesc} ----- XOG statement: ${gel_parse_variable_str}</gel:log>
									</core:if>
									<core:if test="${XOGException != null}">
										<gel:log category="XOG" level="INFO">(Snapshot record - ${z_table_name})Error Information:${XOGException} ----- XOG statement: ${gel_parse_variable_str}</gel:log>
									</core:if>
									<core:if test="${XOGErrorDescRec != null}">
										<gel:log category="XOG" level="INFO">(Snapshot record - ${z_table_name})Error Information:${XOGErrorDescRec} ----- XOG statement: ${gel_parse_variable_str}</gel:log>
									</core:if>
									<core:if test="${XOGExceptionRec != null}">
										<gel:log category="XOG" level="INFO">(Snapshot record - ${z_table_name})Error Information:${XOGExceptionRec} ----- XOG statement: ${gel_parse_variable_str}</gel:log>
									</core:if>
									<core:if test="${XOGERRORDESC != null}">
										<gel:log category="XOG" level="INFO">(Snapshot record - ${z_table_name})Error Information:${XOGERRORDESC} State: ${XOGERROR} ----- XOG statement: ${gel_parse_variable_str}</gel:log>
										<gel:log category="XOG" level="INFO">(Snapshot record - ${z_table_name}) XOG write: ${gel_parse_variable_str} ----- XOG statement: ${gel_parse_variable_str}</gel:log>
									</core:if>

								</core:otherwise>
							</core:choose>

							<core:set value="${count_data+1}" var="count_data"/>
						</core:forEach>	

					</core:forEach>
				</core:when>
			</core:choose>

			<!-- END -->
			<!--######################################################################-->

		</gel:script>
	</scriptText>
</customScript>

